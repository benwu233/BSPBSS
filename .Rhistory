df
Untable(table(example1_1))
table(example1_1)
ftable(example1_1)
tab<-ftable(example1_1)
df<-as.data.frame(tab);df
example1_2 = read.csv("/Users/ben/desktop/stat/example/chap01/example1_2_utf8.csv")
tab = Freq(example1_2)
tab
tab = Freq(example1_2$销售额)
tab
par(mai=c(0.6,0.6,0.4,0.4),cex=0.7)
set.seed(2025)
x <- rnorm(200)
y <- 1+2*x +rnorm(200)
d<-data.frame(x,y)
plot(d,xlab="x=自变量",ylab="y=因变量")
grid(col="grey60")
axis(side=4,col.ticks="blue",lty=1)
grid(col="grey60")
axis(side=40,col.ticks="blue",lty=1)
axis(side=4,col.ticks="blue",lty=2)
plot(d,xlab="x=自变量",ylab="y=因变量")
grid(col="grey60")
axis(side=4,col.ticks="blue",lty=1)
axis(side=2,col.ticks="blue",lty=1)
axis(side=1,col.ticks="blue",lty=1)
axis(side=3,col.ticks="blue",lty=1)
axis(side=3,col.ticks="blue",lty=100)
polygon(d[chull(d),],lty=6,lwd=1,col="lightgreen")
points(d)
points(mean(x),mean(y),pch=19,cex=5,col=2)
abline(v=mean(x),h=mean(y),lty=2,col="gray30")
abline(lm(y~x),lwd=2,col=2)
lines(lowess(y ~ x,f=1/6),col=4,lwd=2,lty=6)
segments(-0.8,0,-1.6,3.3,lty=6,col="blue")
arrows(0.45,-2.2,-0.8,-0.6,code=2,angle=25,length=0.06,col=2)
text(-2.2,3.5,labels=expression("拟合的曲线"),adj=c(-0.1,0.02),col=4)
text(-2.2,3.5,labels=expression("fitted"),adj=c(-0.1,0.02),col=4)
rect(0.4, -1.6, 1.8,-3,col="pink",border="grey60")
mtext(expression(hat(y)==hat(beta)[0]+hat(beta)[1]*x),cex=0.9,side=1,line=-2.5,adj=0.7)                         # 添加注释表达式
legend("topleft",legend=c("拟合的直线","拟合的曲线"),lty=c(1,6),col=c(2,4),cex=0.8,fill=c("red","blue"),box.col="grey60",ncol=1,inset=0.02)            # 添加图例
title("散点图及拟合直线和曲线\n并为图形增加新的元素",cex.main=1,font.main=4)   # 增加标题并折行,使用斜体字
box(col=4,lwd=2)
par(mfrow=c(2,2),mai=c(0.4,0.4,0.3,0.1),cex=0.7,mgp=c(2,1,0),cex.axis=0.8,cex.main=0.8,font.main=1)
set.seed(123)         # 设置随机数种子
x<-rnorm(100) # 生成100个标准正态分布随机数
y<-rexp(100) # 生成100个指数分布随机数
plot(x,y,col=sample(c("black","red","blue"),100,replace=TRUE),main="(a) 散点图")
boxplot(x,y,col=2:3,main="(b) 箱线图")
hist(x,col="orange1",ylab="y",main="(c) 直方图")
barplot(runif(5,10,20),col=2:6,main="(d) 条形图")
layout(matrix(c(1,2,3,3),nrow=2,ncol=2,byrow=TRUE),heights=c(2,1))
layout.show(3)
layout(matrix(c(1,2,3,3),nrow=2,ncol=2),heights=c(2,1))
layout.show(3)
layout(matrix(c(1,1,1,2,3,4),nrow=2,ncol=3,byrow=TRUE),widths=c(3:1),heights=c(2,1))
layout.show(4)
layout(matrix(c(1,2,3,4,5,5,6,7,8),3,3,byrow=TRUE),widths=c(2:1),heights=c(1:1))
layout.show(8)
？layout.show
?layout.show
layout(matrix(c(1,1,1,2,3,4),nrow=2,ncol=3,byrow=TRUE),widths=c(3:1),heights=c(2,1))
layout.show(4)
layout(matrix(c(1,1,1,2,3,4),nrow=2,ncol=3,byrow=TRUE),widths=c(3:1),heights=c(2,1))
layout.show(3)
layout(matrix(c(1,1,1,2,3,4),nrow=2,ncol=3,byrow=TRUE),widths=c(3:1),heights=c(2,1))
layout.show(2)
n=100;set.seed(12);x<-rnorm(n);y<-rexp(n)
layout(matrix(c(1,2,3,4,5,5,6,7,8),3,3,byrow=TRUE),widths=c(2:1),heights=c(1:1))
par(mai=c(0.3,0.3,0.3,0.1),cex.main=0.9,font.main=1)
barplot(runif(8,1,8),col=2:7,main="(a) 条形图")
pie(1:12,col=rainbow(6),labels="",border=NA,main="(b) 饼图")
qqnorm(y,col=1:7,pch=19,xlab="",ylab="",main="(c) Q-Q图")
plot(x,y,pch=19,col=c(1,2,4),xlab="",ylab="",main="(d) 散点图")
plot(rnorm(25),rnorm(25),cex=(y+2),col=2:4,lwd=2,xlab="",ylab="",main="(e) 气泡图")
plot(density(y),col=4,lwd=1,xlab="",ylab="",main="(f) 核密度图");polygon(density(y),col="gold",border="blue")
hist(rnorm(1000),col=3,xlab="",ylab="",main="(g) 直方图")
boxplot(x,col=2,main="(h) 箱线图")
x<-1:10
a<- LETTERS[1:10]
a
par(mfrow=c(1,2),mai=c(0.4,0.4,0.3,0.2),cex=0.8,cex.axis=0.7,cex.lab=0.8,mgp=c(2,1,0),cex.main=0.9,font.main=1)
barplot(x,names=a,col=c("red","green"),main="(a) 循环使用2种颜色")
barplot(x,names=a,col=1:8,main="(b) 重复使用颜色1:8")
par(mfrow=c(2,3),mai=c(0.3,0.3,0.3,0.1),cex=0.7,mgp=c(1,1,0),cex.axis=0.7,cex.main=1,font.main=1)
x<-1:7
names<-LETTERS[1:7]
barplot(x,names=names,col=rainbow(7),main="col=rainbow()")
barplot(x,names=names,col=rainbow(7,start=0.4,end=0.5),main="col=rainbow(start=0.4,end=0.5)")
barplot(x,names=names,col=heat.colors(7),main="col=heat.colors()")
heat.colors(7)
barplot(x,names=names,col=terrain.colors(7),main="col=terrain.colors()")
barplot(x,names=names,col=topo.colors(7),main="col=topo.colors()")
barplot(x,names=names,col=cm.colors(7),main="col=cm.colors()")
library(RColorBrewer)
par(mfrow=c(2,3),mai=c(0.1,0.3,0.3,0.1),cex=0.6,font.main=1)
palette1<-brewer.pal(7,"Reds")
brewer.pal(7,"Reds")
palette2<-brewer.pal(7,"Set1")            # 7种颜色的离散型调色板
palette3<-brewer.pal(7,"RdBu")            # 7种颜色的红蓝色极端值调色板
palette4<-rev(brewer.pal(7,"Greens"))     # 调色板颜色反转
palette5<-brewer.pal(8,"Spectral")[-1]       # 去掉第1种颜色，使用其余7种
palette6<-brewer.pal(6,"RdYlBu")[2:4]     # 使用其中的2:4种颜色
barplot(1:7,col=palette1,main="(a) 红色连续型调色板")
brewer.pal(6,"RdYlBu")
barplot(1:7,col=palette2,main="(b) 离散型调色板")
barplot(1:7,col=palette3,main="(c) 极端值调色板")
barplot(1:7,col=palette4,main="(d) 调色板颜色反转")
barplot(1:7,col=palette5,main="(e) 去掉第1种颜色")
7/0/636
7/0.636
7/0.455
6/0.455
5/0.455
list0 = read.csv("/Users/ben/desktop/list.csv")
list0 = read.csv("/Users/ben/desktop/list.csv",header = FALSE)
head(list0)
order(list0$V1)
list0[order(list0$V1),]
list1 = list0[order(list0$V1),]
median(list1$V1)
sum(list1$V1<2021200744)
sum(list1$V1>2021200744)
head(Titanic)
class(Titanic)
Titanic
as.data.frame( Titanic )
Untable(Titanic)
library(DescTools)
Untable(Titanic)
t0 =  Untable(Titanic)
library(BSPBSS)
library(BSPBSS)
library(BSPBSS)
library(BSPBSS)
140/4
140/44
12000/324
a = rnorm(100)
hist(a)
a = rnorm(1000)
hist(a)
table1_1 = read.csv("/Users/ben/desktop/stat/example/chap01/table1_1.csv")
knitr::opts_chunk$set(echo = TRUE)
a = matrix(0,2,2)
class(a)
dim(a)
a = c(1,2,4)
class(a)
length(a)
table1_1 = read.csv("/Users/ben/desktop/stat/example/chap01/table1_1_utf8.csv")
class(table1_1)
table0 = as.matrix(table1_1)
class(table0)
b = c("很好","好","一般","差","很差")                      # 向量b
b
f2 = factor(b,ordered=TRUE,levels=c("很好","好","一般","差","很差"))# 将向量b编码为有序因子
as.numeric(f2)                                                       # 将因子转换为数值
b = c("很好","好","一般","差","很差")                      # 向量b
b
class(b)
f2 = factor(b,ordered=TRUE,levels=c("很好","好","一般","差","很差"))# 将向量b编码为有序因子
as.numeric(f2)                                                       # 将因子转换为数值
b = c("很好","好","一般","差","很差")                      # 向量b
b
class(b)
f2 = factor(b,ordered=TRUE,levels=c("很好","好","一般","差","很差"))# 将向量b编码为有序因子
class(f2)
as.numeric(f2)                                                       # 将因子转换为数值
a = c(1,2,3)
as.vector(a)
dim(as.vector(a))
b = as.vector(a)
class(b)
example1_1<-read.csv("/Users/ben/desktop/stat/example/chap01/example1_1_utf8.csv")
head(example1_1)
head(example1_1,3)
prop.table(mytable)
mytable = table(example1_1$社区)
mytable
prop.table(mytable)*100
mytable/100
mytable/sum(mytable)
prop.table(mytable)*100
mytable/sum(mytable)*100
apply(mytable1,1,sum)
mytable1 = table(态度,社区)
attach(example1_1)       # 绑定数据
mytable1 = table(态度,社区)
apply(mytable1,1,sum)
apply(mytable1,2,sum)
rbind(mytable1,apply(mytable1,2,sum))
cbind(rbind(mytable1,apply(mytable1,2,sum)), c(apply(mytable1,1,sum),sum(mytable1)) )
attach(example1_1)       # 绑定数据
mytable1 = table(态度,社区)
mytable1  # 生成性别和满意度的二维列联表
addmargins(mytable1)           # 为列联表添加边际和
cbind(rbind(mytable1,apply(mytable1,2,sum)), c(apply(mytable1,1,sum),sum(mytable1)) )
rownames(cbind(rbind(mytable1,apply(mytable1,2,sum)), c(apply(mytable1,1,sum),sum(mytable1)) ))
example1_2 = read.csv("/Users/ben/desktop/stat/example/chap01/example1_2_utf8.csv")
# 使用默认分组，含上限值
tab = Freq(example1_2$销售额)
library(DescTools)
example1_2 = read.csv("/Users/ben/desktop/stat/example/chap01/example1_2_utf8.csv")
# 使用默认分组，含上限值
tab = Freq(example1_2$销售额)
tab
example1_2$销售额
path0 = "/Users/ben/desktop/stat/"
paste0(path0,"chap02/example2_1_1.csv")
path0 = "/Users/ben/desktop/stat/chap02/"
paste0(path0,"example2_1_1.csv")
example2_1 = read.csv(paste0(path0,"chap02/example2_1_1.csv") )
knitr::opts_chunk$set(echo = TRUE)
example2_1 = read.csv(paste0(path0,"example2_1_1.csv") )
path0 = "/Users/ben/desktop/stat/example/chap02/"
paste0(path0,"example2_1_1.csv")
example2_1 = read.csv(paste0(path0,"example2_1_1.csv") )
paste0(path0,"example2_1_1.csv")
example2_1 = read.csv(paste0(path0,"example2_1.csv") )
path0 = "/Users/ben/desktop/stat/example/chap02/"
paste0(path0,"example2_1_1.csv")
example2_1 = read.csv(paste0(path0,"example2_1_utf8.csv") )
attach(example2_1)
#生成频数表
table1 = table(社区)
table2 = table(性别)
table3 = table(态度)
#页面布局
layout(matrix(c(1,2,3,3),2,2,byrow=TRUE))
#设置图形边距和字体大小
par(mai=c(0.6,0.6,0.3,0.1),cex=0.7,cex.main=1,font.main=1,family="楷体")
barplot(table2,xlab="人数",ylab="性别",#绘制性别的条形图
horiz=TRUE,#水平排放各条
density=30,angle=0,#设置填充密度和密度线角度
col=c("grey50","grey80"),border="black",#设置颜色向量
main="(a)水平条形图")#添加标题
path0 = "/Users/ben/desktop/stat/example/chap02/"
paste0(path0,"example2_1_1.csv")
example2_1 = read.csv(paste0(path0,"example2_1_utf8.csv") )
#绑定数据框 example2_1
attach(example2_1)
#生成频数表
table1 = table(社区)
table2 = table(性别)
table3 = table(态度)
table1
layout(matrix(c(1,2,3,3),2,2,byrow=TRUE))
par(mai=c(0.6,0.6,0.3,0.1),cex=0.7,cex.main=1,font.main=1,family="楷体")
barplot(table2,xlab="人数",ylab="性别",#绘制性别的条形图
horiz=TRUE,#水平排放各条
density=30,angle=0,#设置填充密度和密度线角度
col=c("grey50","grey80"),border="black",#设置颜色向量
main="(a)水平条形图")#添加标题
warnings()
par(mai=c(0.6,0.6,0.3,0.1),cex=0.7,cex.main=1,font.main=1)
barplot(table2,xlab="人数",ylab="性别",#绘制性别的条形图
horiz=TRUE,#水平排放各条
density=30,angle=0,#设置填充密度和密度线角度
col=c("grey50","grey80"),border="black",#设置颜色向量
main="(a)水平条形图")#添加标题
warnings()
rm(list=ls())
gc()
example2_1 = read.csv(paste0(path0,"example2_1_utf8.csv") )
path0 = "/Users/ben/desktop/stat/example/chap02/"
paste0(path0,"example2_1_1.csv")
example2_1 = read.csv(paste0(path0,"example2_1_utf8.csv") )
#绑定数据框 example2_1
attach(example2_1)
#生成频数表
table1 = table(社区)
table2 = table(性别)
table3 = table(态度)
#页面布局
layout(matrix(c(1,2,3,3),2,2,byrow=TRUE))
#设置图形边距和字体大小
par(mai=c(0.6,0.6,0.3,0.1),cex=0.7,cex.main=1,font.main=1)
barplot(table2,xlab="人数",ylab="性别",#绘制性别的条形图
horiz=TRUE,#水平排放各条
density=30,angle=0,#设置填充密度和密度线角度
col=c("grey50","grey80"),border="black",#设置颜色向量
main="(a)水平条形图")#添加标题
warnings()
?par
#设置图形边距和字体大小
par(mai=c(0.6,0.6,0.3,0.1),cex=0.7,cex.main=1,font.main=1, family = "Songti SC")
barplot(table2,xlab="人数",ylab="性别",#绘制性别的条形图
horiz=TRUE,#水平排放各条
density=30,angle=0,#设置填充密度和密度线角度
col=c("grey50","grey80"),border="black",#设置颜色向量
main="(a)水平条形图")#添加标题
cumsum(x)
x = sort(table(example2_1$社区), decreasing = TRUE)
x
cumsum(x)
?BarText
par(mfrow = c(1,2), mai = c(0.6,0.6,0.4,0.4), cex = 0.7, cex.main = 1, font.main = 1, family = "Songti SC")
#调色板
palette = rev(RColorBrewer::brewer.pal(4,"Reds"))
spineplot(as.factor(性别)~社区, data = example2_1, col = palette[1:2],
xlab = "社区", ylab = "性别", main = "(a)性别与社区")
as.factor(性别)
spineplot(as.factor(性别)~as.factor(社区), data = example2_1, col = palette[1:2],
xlab = "社区", ylab = "性别", main = "(a)性别与社区")
par(mai = c(0.3,0.3,0.2,0.1), cex = 0.7, cex.main = 0.8)
mosaicplot(~性别+社区+态度,data=example2_1,col=c("#E41A1C","#377EB8"),
cex.axis=0.8,off=5,main="")
par(mfrow=c(1,2), mai = c(0.1,0.4,0.1,0.4), cex = 0.7, family = "Songti SC")
#频数表
tab = table(example2_1$社区)
#设置名称向量
name = names(tab)
#计算百分比
percent = prop.table(tab)*100
#设置标签向量
labs = paste(name," ",percent,"%")
labs
labs = paste(name," ",percent,"%",sep="")
labs
labs = paste(name,percent,"%")
labs
labs = paste0(name," ",percent,"%")
labs
?grid.arrange
library(ggiraphExtra)
library(ggplot2)
library(gridExtra)
?library(ggiraphExtra)
library(ggplot2)
library(gridExtra)
?grid.arrange
?ggDonut
ggDonut
library(ggiraphExtra)
library(ggplot2)
library(gridExtra)
p1 = ggDonut(data = example2_1, aes(donuts=社区),
colour = "white", xmin = 2, xmax = 4, title="(a)饼环图") + theme(text=element_text(family="SimHei"))
p2 = ggPieDonut(data=example2_1,aes(pies=社区,donuts=态度),title="(b)饼环图")
grid.arrange(p1,p2,ncol=2)
?theme
ggDonut
?geom_text
ggPieDonut
ggDonut
?theme
?par
?density
install.packages(aplpack)
install.packages("aplpack")
library(aplpack)
Titanic
?read.csv
a = 1
b= 2
table1_1 = read.csv("/Users/ben/desktop/stat/example/chap01/table1_1_utf8.csv")
View(table1_1)
View(table1_1)
View(table1_1)
View(table1_1)
dim(table1_1)
f2 = factor(b,ordered=TRUE,levels=c("很好","好","一般","差","很差"))
f2
b = c("很好")
f2 = factor(b,ordered=TRUE,levels=c("很好","好","一般","差","很差"))
f2
?apply
example1_2 = read.csv("/Users/ben/desktop/stat/example/chap01/example1_2_utf8.csv")
dim( example1_2 )
View(example1_2)
path0 = "/Users/ben/desktop/stat/example/chap02/"
path0
paste0(path0,"example2_1_1.csv")
paste(path0,"example2_1_1.csv")
for(i in 1:5){
print(i)
}
for(i in 1:5){
paste0(path0,"data",i,".csv")
}
for(i in 1:5){
print( paste0(path0,"data",i,".csv") )
}
example2_1 = read.csv( paste0(path0,"example2_1_utf8.csv") )
example2_1 = read.csv( paste0("example2_1_utf8.csv") )
setwd(/Users/ben/desktop/stat/example/chap02/)
setwd("/Users/ben/desktop/stat/example/chap02/")
example2_1 = read.csv( paste0("example2_1_utf8.csv") )
attach(example2_1)
#生成频数表
table1 = table(社区)
table2 = table(性别)
table3 = table(态度)
barplot(table2, xlab = "人数", ylab = "性别",#绘制性别的条形图
horiz = TRUE,#水平排放各条
density = 30, angle = 0,  #设置填充密度和密度线角度
col = c("grey50","grey80"), border = "black",   #设置颜色向量
main = "(a)水平条形图")    #添加标题
barplot(table2, xlab = "人数", ylab = "性别",#绘制性别的条形图
horiz = TRUE,#水平排放各条
density = 30, angle = 0,  #设置填充密度和密度线角度
col = c("grey50","grey80"), border = "black",   #设置颜色向量
main = "(a)水平条形图")    #添加标题
layout(matrix(c(1,2,3,3), 2, 2, byrow = TRUE))
#设置图形边距和字体大小
par(mai = c(0.6,0.6,0.3,0.1), cex = 0.7, cex.main = 1, font.main = 1, family = "Songti SC")
barplot(table2, xlab = "人数", ylab = "性别",#绘制性别的条形图
horiz = TRUE,#水平排放各条
density = 30, angle = 0,  #设置填充密度和密度线角度
col = c("grey50","grey80"), border = "black",   #设置颜色向量
main = "(a)水平条形图")    #添加标题
barplot(table3, xlab = "态度", ylab = "人数", density = 20, angle = 90,
col = c("red","blue"), border = c(2,4), main = "(b)垂直条形图")
barplot(table1, xlab = "社区", ylab = "人数", cex.names = 1.2, cex.lab = 1.2,
col = c("#FC8D62","#E78AC3","#66C2A5","#FFD92F"), main = "(c)垂直条形图")
#页面布局
layout(matrix(c(1,2,3,3), 2, 2, byrow = TRUE))
#设置图形边距和字体大小
par(mai = c(0.6,0.6,0.3,0.1), cex = 0.7, cex.main = 1, font.main = 1, family = "Songti SC")
barplot(table2, xlab = "人数", ylab = "性别",#绘制性别的条形图
horiz = TRUE,#水平排放各条
main = "(a)水平条形图")    #添加标题
barplot(table3, xlab = "态度", ylab = "人数", main = "(b)垂直条形图")
barplot(table1, xlab = "社区", ylab = "人数",
main = "(c)垂直条形图")
par(mai = c(0.7,0.7,0.2,0.7), cex = 0.7, family = "Songti SC")
table(example2_1$社区)
x = sort(table(example2_1$社区), decreasing = TRUE)
x
#绘制条形图
bar = barplot(x, xlab = "社区", ylab = "频数", col = rainbow(4), ylim = c(0,1.2*max(x)))
rm(list=ls())
gc()
path0 = "/Users/ben/desktop/stat/example/chap02/"
example2_1 = read.csv( paste0(path0,"example2_1_utf8.csv") )
par(mai = c(0.7,0.7,0.2,0.7), cex = 0.7, family = "Songti SC")
#生成一维表并将频数降序排列
x = sort(table(example2_1$社区), decreasing = TRUE)
#绘制条形图
bar = barplot(x, xlab = "社区", ylab = "频数", col = rainbow(4), ylim = c(0,1.2*max(x)))
path0 = "/Users/ben/desktop/stat/example/chap02/"
example2_1 = read.csv( paste0(path0,"example2_1_utf8.csv") )
par(mai = c(0.7,0.7,0.2,0.7), cex = 0.7, family = "Songti SC")
#生成一维表并将频数降序排列
x = sort(table(example2_1$社区), decreasing = TRUE)
#绘制条形图
bar = barplot(x, xlab = "社区", ylab = "频数", col = rainbow(4), ylim = c(0,1.2*max(x)))
#为条形图添加频数标签
text(bar, x, labels = x, pos = 3, col="black")
#计算累积频率
y = cumsum(x) / sum(x)
cumsum(x)
y
#绘制一幅新图加在现有的图形上
par(new = TRUE)
#绘制累积频数折线
plot(y, type = "b", pch = 15, axes = FALSE, xlab = '', ylab = '', main= '')
#在第4个边增加坐标轴
axis(side = 4)
#添加坐标轴标签
mtext("累积频率", side = 4, line = 3, cex = 0.8)
#添加注释文本
text(labels = "累积分布曲线", x = 3, y = 0.92, cex = 1)
path0 = "/Users/ben/desktop/stat/example/chap02/"
example2_1 = read.csv( paste0(path0,"example2_1_utf8.csv") )
par(mai = c(0.7,0.7,0.2,0.7), cex = 0.7, family = "Songti SC")
#生成一维表并将频数降序排列
x = sort(table(example2_1$社区), decreasing = TRUE)
palette = RColorBrewer::brewer.pal(4,"Blues")
palette
#绘制条形图
bar = barplot(x, xlab = "社区", ylab = "频数", col = rainbow(4), ylim = c(0,1.2*max(x)))
#绘制条形图
bar = barplot(x, xlab = "社区", ylab = "频数", col = palette , ylim = c(0,1.2*max(x)))
x = rnorm(100)
hist(x)
quantile(x)
Titanic
knitr::opts_chunk$set(echo = TRUE)
a = 1
a = 1
print(a)
path0 = "/Users/ben/desktop/stat/example/chap02/"
example2_2 = read.csv( paste0(path0,"example2_2_utf8.csv") )
日期
attach(example2_2)
日期
cumsum( c(1,2,3,4) )
addmargins(c(1,2,3))
a = read.csv("/Users/ben/desktop/test.csv")
median(a$学号)
a$学号
head(a)
a  = a[-1,]
a
head(a)
median(a$学号)
sum(a$学号>= 2021200744)
sum(a$学号<=2021200744)
a = read.csv("/Users/ben/desktop/test.csv")
median(a)
median(a$学号)
head(a)
b= a[,1:2]
tail(b)
dim(b)
c = b[1:107,]
median(c$学号)
sum(c$学号<= 2021200744)
sum(c$学号> 2021200744)
