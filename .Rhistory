alpha = 0, size = 1)
#按地区分组
theme(axis.text = element_text(size=7), #设置坐标轴字体大小
legend.position = "right",        #设置图例位置
legend.text = element_text(size="6"), #设置图例字体大小
axis.title = element_text(family = "Songti SC")) +
theme_bw()    #去掉底色
library(ggiraphExtra)
library(ggplot2)
ggRadar(data = example2_4, rescale = FALSE, aes(group = 地区),
alpha = 0, size = 1)
#按地区分组
theme(axis.text = element_text(size=7), #设置坐标轴字体大小
legend.position = "right",        #设置图例位置
legend.text = element_text(size="6") #设置图例字体大小
) +
theme_bw()    #去掉底色
library(ggiraphExtra)
library(ggplot2)
ggRadar(data = example2_4, rescale = FALSE, aes(group = 地区),
alpha = 0, size = 1)
#按地区分组
theme(axis.text = element_text(size=7), #设置坐标轴字体大小
legend.position = "right",        #设置图例位置
legend.text = element_text(size="6") #设置图例字体大小
) +   theme_bw()    #去掉底色
library(ggiraphExtra)
library(ggplot2)
ggRadar(data = example2_4, rescale = FALSE, aes(group = 地区),
alpha = 0, size = 1) + theme(axis.text = element_text(size=7), #设置坐标轴字体大小
legend.position = "right",        #设置图例位置
legend.text = element_text(size="6") #设置图例字体大小
) +   theme_bw()    #去掉底色
library(ggiraphExtra)
library(ggplot2)
ggRadar(data = example2_4, rescale = FALSE, aes(group = 地区),
alpha = 0, size = 1) +
theme(axis.text = element_text(size=7), #设置坐标轴字体大小
legend.position = "right",        #设置图例位置
legend.text = element_text(size="6"), #设置图例字体大小
axis.title = element_text(family = "Songti SC")) +
theme_bw()    #去掉底色
library(ggiraphExtra)
library(ggplot2)
ggRadar(data = example2_4, rescale = FALSE, aes(group = 地区),
alpha = 0, size = 1) +
theme(axis.text = element_text(size=7), #设置坐标轴字体大小
legend.position = "right",        #设置图例位置
legend.text = element_text(size="6"), #设置图例字体大小
text=element_text("Songti SC")) +
theme_bw()    #去掉底色
library(ggiraphExtra)
library(ggplot2)
ggRadar(data = example2_4, rescale = FALSE, aes(group = 地区),
alpha = 0, size = 1) +
theme(axis.text = element_text(size=7), #设置坐标轴字体大小
legend.position = "right",        #设置图例位置
legend.text = element_text(size="6"), #设置图例字体大小
axis.text=element_text("Songti SC")) +
theme_bw()    #去掉底色
library(ggiraphExtra)
library(ggplot2)
ggRadar(data = example2_4, rescale = FALSE, aes(group = 地区),
alpha = 0, size = 1) +
theme(axis.text = element_text(size=7), #设置坐标轴字体大小
legend.position = "right",        #设置图例位置
legend.text = element_text(size="6"), #设置图例字体大小
axis.text.x=element_text("Songti SC")) +
theme_bw()    #去掉底色
library(ggiraphExtra)
library(ggplot2)
ggRadar(data = example2_4, rescale = FALSE, aes(group = 地区),
alpha = 0, size = 1) +
theme(axis.text = element_text(size=7), #设置坐标轴字体大小
legend.position = "right",        #设置图例位置
legend.text = element_text(size="6"), #设置图例字体大小
legend.text=element_text("Songti SC")) +
theme_bw()    #去掉底色
library(ggiraphExtra)
library(ggplot2)
ggRadar(data = example2_4, rescale = FALSE, aes(group = 地区),
alpha = 0, size = 1) +
theme(axis.text = element_text(size=7), #设置坐标轴字体大小
legend.position = "right",        #设置图例位置
legend.text = element_text(size="6",family = "Songti SC") #设置图例字体大小
) +
theme_bw()    #去掉底色
library(ggiraphExtra)
library(ggplot2)
ggRadar(data = example2_4, rescale = FALSE, aes(group = 地区),
alpha = 0, size = 1) +
theme(axis.text = element_text(size=7), #设置坐标轴字体大小
legend.position = "right",        #设置图例位置
legend.text = element_text(size="6",basic_family = "Songti SC") #设置图例字体大小
) +
theme_bw()    #去掉底色
library(ggiraphExtra)
library(ggplot2)
ggRadar(data = example2_4, rescale = FALSE, aes(group = 地区),
alpha = 0, size = 1) +
theme(axis.text = element_text(size=7,family = "Songti SC"), #设置坐标轴字体大小
legend.position = "right",        #设置图例位置
legend.text = element_text(size="6",family = "Songti SC") #设置图例字体大小
) +
theme_bw()    #去掉底色
install.packages(extrafont)
install.packages("extrafont")
library(extrafont)
font_import()
fonts()
library(extrafont)
loadfonts()
library(ggiraphExtra)
library(ggplot2)
ggRadar(data = example2_4, rescale = FALSE, aes(group = 地区),
alpha = 0, size = 1) +
theme(axis.text = element_text(size=7,family = "Songti SC"), #设置坐标轴字体大小
legend.position = "right",        #设置图例位置
legend.text = element_text(size="6",family = "Songti SC") #设置图例字体大小
) +
theme_bw()    #去掉底色
font_import()
warnings()
library(ggiraphExtra)
library(ggplot2)
ggRadar(data = example2_4, rescale = FALSE, aes(group = 地区),
alpha = 0, size = 1) +
theme(axis.text = element_text(size=7,family = "Songti SC"), #设置坐标轴字体大小
legend.position = "right",        #设置图例位置
legend.text = element_text(size="6",family = "Songti SC") #设置图例字体大小
) +
theme_bw()    #去掉底色
library(ggiraphExtra)
library(ggplot2)
ggRadar(data = example2_4, rescale = FALSE, aes(group = 地区),
alpha = 0, size = 1) +
theme(axis.text = element_text(size=7), #设置坐标轴字体大小
legend.position = "right",        #设置图例位置
legend.text = element_text(size="6")) +  #设置图例字体大小
theme_bw()    #去掉底色
font_families()
install.packages("showtext")
font_families()
library(sysfonts)
font_families()
library(ggiraphExtra)
library(ggplot2)
ggRadar(data = example2_4, rescale = FALSE, aes(group = 地区),
alpha = 0, size = 1) +
theme(axis.text = element_text(size=7), #设置坐标轴字体大小
legend.position = "right",        #设置图例位置
legend.text = element_text(size="6", family = "sans")) +  #设置图例字体大小
theme_bw()    #去掉底色
library(ggiraphExtra)
library(ggplot2)
ggRadar(data = example2_4, rescale = FALSE, aes(group = 地区),
alpha = 0, size = 1) +
theme(axis.text = element_text(size=7), #设置坐标轴字体大小
legend.position = "right",        #设置图例位置
legend.text = element_text(size="6", family = "serif")) +  #设置图例字体大小
theme_bw()    #去掉底色
mat = as.matrix(example2_4[,2:9])
rownames(mat) = example2_4[,1]     #将数据框转化成矩阵
stars(mat, nrow = 4,        #排列成四行
full = TRUE,         #绘制出满圆
scale = TRUE,        #将数据缩放到［0,1］的范围
len = 1,             #设置半径或线段长度的比例
draw.segments = TRUE, key.loc = c(7,2,3),  #绘制线段图，并设置位置
mar = c(0.5,0.1,0.1,0.1),      #设置图形边界
cex = 0.7)           #设置标签字体大小
mat = as.matrix(example2_4[,2:9])
rownames(mat) = example2_4[,1]     #将数据框转化成矩阵
stars(mat, nrow = 4,        #排列成四行
full = TRUE,         #绘制出满圆
scale = TRUE,        #将数据缩放到［0,1］的范围
len = 1,             #设置半径或线段长度的比例
draw.segments = TRUE, key.loc = c(7,2,3),  #绘制线段图，并设置位置
mar = c(0.5,0.1,0.1,0.1),      #设置图形边界
cex = 0.7,
family = "Songti SC")           #设置标签字体大小
?stars
mat = as.matrix(example2_4[,2:9])
rownames(mat) = example2_4[,1]     #将数据框转化成矩阵
par(mai = c(0.6,0.6,0.1,0.1), cex = 0.7, family = "Songti SC")
stars(mat, nrow = 4,        #排列成四行
full = TRUE,         #绘制出满圆
scale = TRUE,        #将数据缩放到［0,1］的范围
len = 1,             #设置半径或线段长度的比例
draw.segments = TRUE, key.loc = c(7,2,3),  #绘制线段图，并设置位置
mar = c(0.5,0.1,0.1,0.1),      #设置图形边界
cex = 0.7,
family = "Songti SC")           #设置标签字体大小
mat = as.matrix(example2_4[,2:9])
rownames(mat) = example2_4[,1]     #将数据框转化成矩阵
par(family = "Songti SC")
stars(mat, nrow = 4,        #排列成四行
full = TRUE,         #绘制出满圆
scale = TRUE,        #将数据缩放到［0,1］的范围
len = 1,             #设置半径或线段长度的比例
draw.segments = TRUE, key.loc = c(7,2,3),  #绘制线段图，并设置位置
mar = c(0.5,0.1,0.1,0.1),      #设置图形边界
cex = 0.7)           #设置标签字体大小
library(symbols)
install.packages("symbols")
library(symbols)
library(reshape2)
library(ggplot2)
date = as.Date(example2_2$日期) #将日期转化成日期变量date
library(ggplot2)
?geom_line
Titanic
head(Titanic)
Titanic
table1 = table(Sex)
table1 = table(Titanic$Sex)
#设置图形边距和字体大小
par(mai = c(0.6,0.6,0.3,0.1), cex = 0.7, cex.main = 1, font.main = 1, family = "Songti SC")
barplot(table1, xlab = "人数", ylab = "性别",#绘制性别的条形图
horiz = TRUE,#水平排放各条
density = 30, angle = 0,  #设置填充密度和密度线角度
col = c("grey50","grey80"), border = "black",   #设置颜色向量
main = "(a)水平条形图")    #添加标题
Titanic
table1 = table(Titanic$Sex)
data.frame(Titanic)
data0 = data.frame(Titanic)
table1 = table(data0$Sex)
#设置图形边距和字体大小
par(mai = c(0.6,0.6,0.3,0.1), cex = 0.7, cex.main = 1, font.main = 1, family = "Songti SC")
barplot(table1, xlab = "人数", ylab = "性别",#绘制性别的条形图
horiz = TRUE,#水平排放各条
density = 30, angle = 0,  #设置填充密度和密度线角度
col = c("grey50","grey80"), border = "black",   #设置颜色向量
main = "(a)水平条形图")    #添加标题
table1
data0 = Untable(Titanic)
data0 = Untable(Titanic)
table1 = table(data0$Sex)
#设置图形边距和字体大小
par(mai = c(0.6,0.6,0.3,0.1), cex = 0.7, cex.main = 1, font.main = 1, family = "Songti SC")
barplot(table1, xlab = "人数", ylab = "性别",#绘制性别的条形图
horiz = TRUE,#水平排放各条
density = 30, angle = 0,  #设置填充密度和密度线角度
col = c("grey50","grey80"), border = "black",   #设置颜色向量
main = "(a)水平条形图")    #添加标题
table1
Titanic
data.frame(Titanic)
data0 = as.data.frame(Titanic)
data0
data0 = Untable(Titanic)
dim(data0)
data0
head(data0)
knitr::opts_chunk$set(echo = TRUE)
path0 = "/Users/ben/desktop/stat/example/chap03/"
example3_1 = read.csv( paste0(path0,"example3_1_utf8.csv") )
example3_2 = read.csv( paste0(path0,"example3_2_utf8.csv") )
?weighted.mean
example3_2 = read.csv( paste0(path0,"example3_2_utf8.csv") )
weighted.mean(x = example3_2$组中值, w = example3_2$人数)
quantile(example3_1$分数, probs = c(0.25, 0.75), type = 6)
?quantile
quantile(example3_1$分数, probs = 1:10/100, type = 6)
quantile(example3_1$分数, probs = 1:10/10, type = 6)
quantile(example3_1$分数, probs = 0:10/10, type = 6)
path0 = "/Users/ben/desktop/stat/example/chap03/"
example3_1 = read.csv( paste0(path0,"example3_1_utf8.csv") )
example3_2 = read.csv( paste0(path0,"example3_2_utf8.csv") )
library(DescTools)
Mode(example3_1$分数)
IQR(example3_1$分数, type = 6)
q = quantile(example3_1$分数, probs = c(0.25, 0.75), type = 6)
q[2] - q[1]
q
path0 = "/Users/ben/desktop/stat/example/chap03/"
example3_1 = read.csv( paste0(path0,"example3_1_utf8.csv") )
example3_2 = read.csv( paste0(path0,"example3_2_utf8.csv") )
example3_9 = read.csv( paste0(path0,"example3_9_utf8.csv") )
library(DescTools)
mean = apply(example3_9, 2, mean)
sd = apply(example3_9, 2, sd)
cv = sd/mean
x = data.frame("平均环数" = mean, "标准差" = sd, "变异系数" = cv)
round(x,4)
x
mean = apply(example3_9, 2, mean)
sd = apply(example3_9, 2, sd)
cv = sd/mean
x = data.frame("平均环数" = mean, "标准差" = sd, "变异系数" = cv)
round(x,4)
boxplot(example3_9, notch = TRUE, col = "lightblue", ylab = "射击环数", xlab = "运动员")
boxplot(example3_9, notch = TRUE, col = "lightblue", ylab = "射击环数", xlab = "运动员")
par(mai = c(0.7,0.7,0.2,0.7), cex = 0.7, family = "Songti SC")
boxplot(example3_9, notch = TRUE, col = "lightblue", ylab = "射击环数", xlab = "运动员")
boxplot(example3_9,  col = "lightblue", ylab = "射击环数", xlab = "运动员")
?boxplot
scale(example3_1$分数)
as.vector(round(scale(example3_1$分数),4))
install.packages("e1071")
install.packages("e1071")
knitr::opts_chunk$set(echo = TRUE)
par(mfrow = c(1,3), mai = c(0.7,0.5,0.2,0.1))
mf = function(x){
hist(x, probability = TRUE, col = "lightblue",
xlab = "x", ylab = "Density",
main = paste("kurtosis=", round(kurtosis(x), digits = 4)),
sub = paste("skewness=", round(skewness(x), digits = 4)) )
lines(density(x), col = "red", lwd = 2)
}
n = 5000
mf(rchisq(n,10))
library(e1071)
par(mfrow = c(1,3), mai = c(0.7,0.5,0.2,0.1))
mf = function(x){
hist(x, probability = TRUE, col = "lightblue",
xlab = "x", ylab = "Density",
main = paste("kurtosis=", round(kurtosis(x), digits = 4)),
sub = paste("skewness=", round(skewness(x), digits = 4)) )
lines(density(x), col = "red", lwd = 2)
}
n = 5000
mf(rchisq(n,10))
mf(rnorm(n))
mf(-rchisq(n,10)+36)
install.packages("pastecs")
library(pastecs)
round(stat.desc(example3_9),4)
install.packages("psych")
library(psych)
decsribe(example3_9)
library(psych)
describe(example3_9)
path0 = "/Users/ben/desktop/stat/example/chap03/"
example3_1 = read.csv( paste0(path0,"example3_1_utf8.csv") )
example3_2 = read.csv( paste0(path0,"example3_2_utf8.csv") )
example3_9 = read.csv( paste0(path0,"example3_9_utf8.csv") )
example3_12 = read.csv( paste0(path0,"example3_12_utf8.csv") )
attach(example3_12)
par(fig = c(0, 0.8, 0, 0.8), family = "Songti SC")
hist(月生活费支出, xlab = "月生活费支出", ylab = "频率", prob = TRUE,
col = "lightblue", main = "")
rug(jitter(月生活费支出))
lines(density(月生活费支出), col = "red")
par(fig = c(0, 0.8, 0.35, 1), new = TRUE)
boxplot(月生活费支出, horizontal = TRUE, axes = FALSE)
boxplot(月生活费支出~家庭所在地*性别, col = 2:4, ylab = "月生活费支出")
attach(example3_12)
par(fig = c(0, 0.8, 0, 0.8), family = "Songti SC")
hist(月生活费支出, xlab = "月生活费支出", ylab = "频率", prob = TRUE,
col = "lightblue", main = "")
rug(jitter(月生活费支出))
lines(density(月生活费支出), col = "red")
par(fig = c(0, 0.8, 0.35, 1), new = TRUE)
boxplot(月生活费支出, horizontal = TRUE, axes = FALSE)
par(mai = c(0.6,0.6,0.3,0.1), cex = 0.7, family = "Songti SC")
boxplot(月生活费支出~家庭所在地*性别, col = 2:4, ylab = "月生活费支出")
?with
my_summary = function(x, feature){
with(x, data.frame(
n = length(feature),
"平均数" = mean(feature)
))
}
my_summary(example3_12,月生活支出)
attach(example3_12)
my_summary(example3_12,月生活费支出)
my_summary = function(x){
with(x, data.frame(
n = length(月生活费支出),
"平均数" = mean(月生活费支出),
"中位数" = median(月生活费支出),
"标准差" = sd(月生活费支出),
"全距" = max(月生活费支出) - min(月生活费支出),
"变异系数" = sd(月生活费支出)/mean(月生活费支出),
"偏度系数" = e1071::skewness(月生活费支出)
))
}
library(plyr)
ddply(example3_12, .(性别), my_summary)
ddply(example3_12, .(家庭所在地), my_summary)
install.packages("doBy")
library(doBy)
myfunc =  function(x){
c(n = length(x), mean = mean(x), median = median(x), sd = sd(x),
CV = sd(x)/mean(x), R = max(x) - min(x), SK = e1071::skewness(x))
}
summaryBy(月生活费支出~性别+家庭所在地, data = example3_12, FUN = myfunc)
############### PNC data  ###################
library(gplots)
library(nlss)
library(gtools)
library(abind)
library(DescTools)
library(Rcpp)
#################
Class
eruptions
faithful
?hist
hist(eruptions,data=faithful)
attach(faithful)
knitr::opts_chunk$set(echo = TRUE)
print("d")
attach(faithful)
{{{{d=1}}}}
#include <Rcpp.h>
using namespace Rcpp;
library(Rcpp)
sourceCpp("/Users/ben/desktop/test2222.cpp")
timesTwo(43)
timesTwo(c(1,2,3,4))
library(Rcpp)
sourceCpp("/Users/ben/desktop/test2222.cpp")
a = c(0,91,-23,4,5,-1000)
sump(a)
timesTwo(4)
timesTwo(40)
timesTwo(a)
library(Rcpp)
sourceCpp("/Users/ben/desktop/test2222.cpp")
a = c(0,91,-23,4,5,-1000)
sump(a)
timesTwo(a)
library(Rcpp)
sourceCpp("/Users/ben/desktop/test2222.cpp")
a = c(0,91,-23,4,5,-1000)
sump(a)
res = max_c2(a)
class(res)
res$value
res$idx
library(Rcpp)
sourceCpp("/Users/ben/desktop/test2222.cpp")
A = matrix( c(1,-1,1,-1), 2,2)
B = matrix( c(2,3,4,5), 2,2)
MatMltp(A,B) - A%*%B
library(microbenchmark)
microbenchmark(MatMltp(A,B),A%*%B)
A = matrix( rnorm(2500), 50,50)
B = matrix( rnorm(2500), 50,50)
library(microbenchmark)
microbenchmark(MatMltp(A,B),A%*%B)
library(Rcpp)
sourceCpp("/Users/ben/desktop/test2222.cpp")
rnorm_c(10,0,1)
hist(rnorm_c(1000,0,1))
samp_c(10,2)
samp_c(2,2)
samp_c(2,2)
samp_vec(c(12,34,42,5),2)
samp_vec(c(12,34,42,5),2)
samp_vec(c(12,34,42,5),2)
samp_vec(c(12,34,42,5),2)
rm(list=ls())
gc()
library(Rcpp)
sourceCpp("/Users/ben/desktop/test2222.cpp")
samp_vec(c(12,34,42,5),2)
install.packages("movMF")
library(Rcpp)
sourceCpp("/Users/ben/desktop/test2222.cpp")
res = rmovMF_c(2,c(1,2,3))
a = c(1,2,3)
res = rmovMF_c(2,a)
library(movMF)
res = rmovMF_c(2,a)
res
rmovMF(2,a,1)
rmovMF(1,a,1)
sum(rmovMF(1,a,1)^2)
sum(rmovMF_c(1,a)^2)
set.seed(126)
rmovMF_c(2,a)
set.seed(126)
rmovMF_c(2,a)
set.seed(126)
rmovMF_c(2,a)
set.seed(126)
rmovMF_c(2,a)
set.seed(126)
rmovMF_c(2,a)
set.seed(126)
rmovMF_c(2,a)
set.seed(126)
rmovMF_c(2,a)
set.seed(126)
rmovMF_c(2,a)
set.seed(126)
rmovMF(2,a,1)
library(Rcpp)
library(RcppArmadillo)
sourceCpp("/Users/ben/desktop/test2222.cpp")
a = c(1,2,3)
vec1(a)
res = rmovMF_c(2,a)
rmovMF(1,a,1)
rmovMF_c(2,a)
b = diag(c(6,12))
mat1(b)
library(Rcpp)
library(RcppArmadillo)
sourceCpp("/Users/ben/desktop/test2222.cpp")
a = matrix(0,2,2)
b = matrix(0,3,3)
MatMltp(a,b)
library(Rcpp)
library(RcppArmadillo)
sourceCpp("/Users/ben/desktop/test2222.cpp")
a = matrix(0,2,2)
b = matrix(0,3,3)
MatMltp(a,b)
