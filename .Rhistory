0.02887995*20
0.02887995*sqrt(20)
sum(X$A^2)
sum(X$A[,1]^2)
sum(X$S^2)
max(X$S)
min(X$S)
0.03333333*60
0.03333333*60/2
max(res_sum95*60/2)
max(res_sum95$Slist*60/2)
max(res_sum95$S*60/2)
savepath  = "/home/ben/work/bspbss/sim_kernel2/res"
max(abs(err_map ) )
levelplot2D(S=err_map, lim = c(-1.0,1.0),xgrid = X$xgrid,path = savepath,name = "ttest")
levelplot2D(S=p5map*60/2, lim = c(-1.0,1.0),xgrid = X$xgrid,path = savepath,name = "p5map")
levelplot2D(S=p95map*60/2, lim = c(-1.0,1.0),xgrid = X$xgrid,path = savepath,name = "p95map")
max(p5map*60/2)
max(p95map*60/2)
err_rate = rep(0,100)
err_map = matrix(0,3,900)
p5map = matrix(0,3,900)
p95map = matrix(0,3,900)
for(i in 1:100){
print(i)
ini = ini_list[[i]]
res = res_list[[i]]
X = X_list[[i]]
res_sum5 = sum_mcmc_bspbss(res, X$X, ini$kernel, start = 1, end = 1000, select_p = 0.5)
res_sum95 = sum_mcmc_bspbss(res, X$X, ini$kernel, start = 1, end = 1000, select_p = 0.95)
err_rate[i] = sum(res_sum5$S==res_sum95$S)/2700
#err_map = err_map + (res_sum5$S!=res_sum95$S)
p5map = p5map + res_sum5$S
p95map = p95map + res_sum95$S
}
err_map = err_map/100
p5map = p5map/100
p95map = p95map/100
max(p5map*60/2)
max(res_sum95$S*60/2)
max(res_sum5$S*60/2)
err_rate = rep(0,100)
err_map = matrix(0,3,900)
p5map = matrix(0,3,900)
p95map = matrix(0,3,900)
for(i in 1:10){
print(i)
ini = ini_list[[i]]
res = res_list[[i]]
X = X_list[[i]]
res_sum5 = sum_mcmc_bspbss(res, X$X, ini$kernel, start = 1, end = 1000, select_p = 0.5)
res_sum95 = sum_mcmc_bspbss(res, X$X, ini$kernel, start = 1, end = 1000, select_p = 0.95)
err_rate[i] = sum(res_sum5$S==res_sum95$S)/2700
#err_map = err_map + (res_sum5$S!=res_sum95$S)
p5map = p5map + res_sum5$S
p95map = p95map + res_sum95$S
}
max(res_sum95$S*60/2)
err_rate = rep(0,100)
err_map = matrix(0,3,900)
p5map = matrix(0,3,900)
p95map = matrix(0,3,900)
for(i in 1:10){
print(i)
ini = ini_list[[i]]
res = res_list[[i]]
X = X_list[[i]]
res_sum5 = sum_mcmc_bspbss(res, X$X, ini$kernel, start = 1, end = 1000, select_p = 0.5)
res_sum95 = sum_mcmc_bspbss(res, X$X, ini$kernel, start = 1, end = 1000, select_p = 0.95)
err_rate[i] = sum(res_sum5$S==res_sum95$S)/2700
#err_map = err_map + (res_sum5$S!=res_sum95$S)
ICA5 =  res_sum5$S
ICA95 =  res_sum95$S
ind = compute.match.idx.s.tra2(ICA5,X$S)
ICA1 = ICA5[ind,]
p5map = p5map + ICA1
ind = compute.match.idx.s.tra2(ICA95,X$S)
ICA1 = ICA95[ind,]
p95map = p95map + ICA1
}
mean(err_rate)*1000
sd(err_rate)*1000
err_map = err_map/100
p5map = p5map/100
p95map = p95map/100
source("/home/ben/Rpackage/bspbss_func.R")
#sourceCpp("/Users/ben/desktop/Rpackage/BSPBSS/src/Rcpp.cpp")
sourceCpp("/home/ben/Rpackage/Rcpptmp.cpp")
err_rate = rep(0,100)
err_map = matrix(0,3,900)
p5map = matrix(0,3,900)
p95map = matrix(0,3,900)
for(i in 1:10){
print(i)
ini = ini_list[[i]]
res = res_list[[i]]
X = X_list[[i]]
res_sum5 = sum_mcmc_bspbss(res, X$X, ini$kernel, start = 1, end = 1000, select_p = 0.5)
res_sum95 = sum_mcmc_bspbss(res, X$X, ini$kernel, start = 1, end = 1000, select_p = 0.95)
err_rate[i] = sum(res_sum5$S==res_sum95$S)/2700
#err_map = err_map + (res_sum5$S!=res_sum95$S)
ICA5 =  res_sum5$S
ICA95 =  res_sum95$S
ind = compute.match.idx.s.tra2(ICA5,X$S)
ICA1 = ICA5[ind,]
p5map = p5map + ICA1
ind = compute.match.idx.s.tra2(ICA95,X$S)
ICA1 = ICA95[ind,]
p95map = p95map + ICA1
}
mean(err_rate)*1000
sd(err_rate)*1000
err_map = err_map/100
p5map = p5map/100
p95map = p95map/100
err_rate = rep(0,100)
err_map = matrix(0,3,900)
p5map = matrix(0,3,900)
p95map = matrix(0,3,900)
for(i in 1:100){
print(i)
ini = ini_list[[i]]
res = res_list[[i]]
X = X_list[[i]]
res_sum5 = sum_mcmc_bspbss(res, X$X, ini$kernel, start = 1, end = 1000, select_p = 0.5)
res_sum95 = sum_mcmc_bspbss(res, X$X, ini$kernel, start = 1, end = 1000, select_p = 0.95)
err_rate[i] = sum(res_sum5$S==res_sum95$S)/2700
#err_map = err_map + (res_sum5$S!=res_sum95$S)
ICA5 =  res_sum5$S
ICA95 =  res_sum95$S
ind = compute.match.idx.s.tra2(ICA5,X$S)
ICA1 = ICA5[ind,]
p5map = p5map + ICA1
ind = compute.match.idx.s.tra2(ICA95,X$S)
ICA1 = ICA95[ind,]
p95map = p95map + ICA1
}
mean(err_rate)*1000
sd(err_rate)*1000
err_map = err_map/100
p5map = p5map/100
p95map = p95map/100
savepath  = "/home/ben/work/bspbss/sim_kernel2/res"
max(abs(err_map ) )
levelplot2D(S=err_map, lim = c(-1.0,1.0),xgrid = X$xgrid,path = savepath,name = "ttest")
levelplot2D(S=p5map*60/2, lim = c(-1.0,1.0),xgrid = X$xgrid,path = savepath,name = "p5map")
levelplot2D(S=p95map*60/2, lim = c(-1.0,1.0),xgrid = X$xgrid,path = savepath,name = "p95map")
levelplot2D(S=p5map*60/2, lim = c(-1.3,1.3),xgrid = X$xgrid,path = savepath,name = "p5map")
levelplot2D(S=p95map*60/2, lim = c(-1.3,1.3),xgrid = X$xgrid,path = savepath,name = "p95map")
max(ICA1)
max(ICA1*60/2)
max(p5map)
err_rate = rep(0,100)
err_map = matrix(0,3,900)
p5map = matrix(0,3,900)
p95map = matrix(0,3,900)
for(i in 1:100){
print(i)
ini = ini_list[[i]]
res = res_list[[i]]
X = X_list[[i]]
res_sum5 = sum_mcmc_bspbss(res, X$X, ini$kernel, start = 1, end = 1000, select_p = 0.5)
res_sum95 = sum_mcmc_bspbss(res, X$X, ini$kernel, start = 1, end = 1000, select_p = 0.95)
err_rate[i] = sum(res_sum5$S==res_sum95$S)/2700
#err_map = err_map + (res_sum5$S!=res_sum95$S)
ICA5 =  res_sum5$S
ICA95 =  res_sum95$S
ind = compute.match.idx.s.tra2(ICA5,X$S)
ICA1 = ICA5[ind,]
print(max(ICA1))
p5map = p5map + ICA1
ind = compute.match.idx.s.tra2(ICA95,X$S)
ICA1 = ICA95[ind,]
p95map = p95map + ICA1
}
i = 99
ini = ini_list[[i]]
res = res_list[[i]]
X = X_list[[i]]
res_sum5 = sum_mcmc_bspbss(res, X$X, ini$kernel, start = 1, end = 1000, select_p = 0.5)
res_sum5$S
max( res_sum5$S )
min( res_sum5$S )
err_rate = rep(0,100)
err_map = matrix(0,3,900)
p5map = matrix(0,3,900)
p95map = matrix(0,3,900)
for(i in 1:100){
print(i)
ini = ini_list[[i]]
res = res_list[[i]]
X = X_list[[i]]
res_sum5 = sum_mcmc_bspbss(res, X$X, ini$kernel, start = 1, end = 1000, select_p = 0.5)
res_sum95 = sum_mcmc_bspbss(res, X$X, ini$kernel, start = 1, end = 1000, select_p = 0.95)
err_rate[i] = sum(res_sum5$S==res_sum95$S)/2700
#err_map = err_map + (res_sum5$S!=res_sum95$S)
ICA5 =  res_sum5$S
ICA95 =  res_sum95$S
ind = compute.match.idx.s.tra2(ICA5,X$S)
ICA1 = ICA5[ind,]
for(j in 1:3){
if( mean(ICA1[j,])<0 ){
ICA1[j,] = -ICA1[j,]
}
}
p5map = p5map + ICA1
ind = compute.match.idx.s.tra2(ICA95,X$S)
ICA1 = ICA95[ind,]
for(j in 1:3){
if( mean(ICA1[j,])<0 ){
ICA1[j,] = -ICA1[j,]
}
}
p95map = p95map + ICA1
}
mean(err_rate)*1000
sd(err_rate)*1000
err_map = err_map/100
p5map = p5map/100
p95map = p95map/100
savepath  = "/home/ben/work/bspbss/sim_kernel2/res"
max(abs(err_map ) )
levelplot2D(S=err_map, lim = c(-1.0,1.0),xgrid = X$xgrid,path = savepath,name = "ttest")
levelplot2D(S=p5map*60/2, lim = c(-1.3,1.3),xgrid = X$xgrid,path = savepath,name = "p5map")
levelplot2D(S=p95map*60/2, lim = c(-1.3,1.3),xgrid = X$xgrid,path = savepath,name = "p95map")
res_sum_list=list()
tag = 1
for(lr0 in c(0.02,0.04,0.06,0.08,0.1)){
for(decay0 in c(0.02,0.04,0.06,0.08,0.1)){
res_sum_list[[tag]] = readRDS(paste0(path0,"res_sum_gk002_82_5k_lr",lr0,"de",decay0,".rds"))
tag = tag + 1
}
}
path0 = "/home/ben/work/bspbss/real_kernel/"
res_sum_list=list()
tag = 1
for(lr0 in c(0.02,0.04,0.06,0.08,0.1)){
for(decay0 in c(0.02,0.04,0.06,0.08,0.1)){
res_sum_list[[tag]] = readRDS(paste0(path0,"res_sum_gk002_82_5k_lr",lr0,"de",decay0,".rds"))
tag = tag + 1
}
}
tag = 1
mll = rep(0,25)
for(lr0 in c(0.02,0.04,0.06,0.08,0.1)){
for(decay0 in c(0.02,0.04,0.06,0.08,0.1)){
tmp = res_sum_list[[tag]]$loglik
print( paste(lr0, decay0, tag, effectiveSize(tmp),mean(tmp)) )
mll[tag] = mean(tmp)
tag = tag + 1
}
}
plot(res_sum_list[[tag]]$loglik)
plot(res_sum_list[[1]]$loglik)
plot(res_sum_list[[2]]$loglik)
plot(res_sum_list[[3]]$loglik)
plot(res_sum_list[[4]]$loglik)
plot(res_sum_list[[5]]$loglik)
plot(res_sum_list[[6]]$loglik)
plot(res_sum_list[[7]]$loglik)
plot(res_sum_list[[10]]$loglik)
plot(res_sum_list[[11]]$loglik)
plot(res_sum_list[[13]]$loglik)
max(res_sum_list[[13]]$loglik)
plot(res_sum_list[[1]]$loglik)
plot(res_sum_list[[25]]$loglik)
plot(res_sum_list[[1]]$loglik)
plot(res_sum_list[[1]]$loglik[1:100])
plot(res_sum_list[[1]]$loglik[1:1000])
plot(res_sum_list[[1]]$loglik[1:2000])
plot(res_sum_list[[1]]$loglik[1:200])
tag = 1
mll = rep(0,25)
for(lr0 in c(0.02,0.04,0.06,0.08,0.1)){
for(decay0 in c(0.02,0.04,0.06,0.08,0.1)){
tmp = res_sum_list[[tag]]$loglik[200:500]
print( paste(lr0, decay0, tag, effectiveSize(tmp),mean(tmp)) )
mll[tag] = mean(tmp)
tag = tag + 1
}
}
rm(list=ls())
gc()
## real data
#load("/Users/ben/desktop/work3/data/abide_3mm.RData")
load("/home/ben/data/abide_3mm.RData")
d0 = 0.5
mask1 = rep(0, nrow(coord))
coord0 = as.matrix(coord)
for(i in 1:nrow(coord)){
mask1[i] = aal_map[coord0[i,][1],coord0[i,][2],coord0[i,][3]]
}
rm(falff)
rm(lfcd)
rm(reho)
gc()
library(Rcpp)
library(RcppArmadillo)
library(RcppParallel)
#sourceCpp("/Users/ben/desktop/Rpackage/BSPBSS/src/Rcpp.cpp")
sourceCpp("/home/ben/Rpackage/Rcpptmp.cpp")
source("/home/ben/Rpackage/bspbss_fun.R")
MClength = 5000
burn_in = 0
show_step = 1000
for(lr0 in c(0.002,0.004,0.006,0.008,0.01)){
for(decay0 in c(0.002,0.004,0.006,0.008,0.01)){
seed0 = lr0*10000 + decay0 * 100
set.seed(seed0)
print(paste(seed0,lr0,decay0))
ini = init_bspbss(degree_weighted, mask = (mask1>0), xgrid = coord, dens = d0, q = 10, kernel="gaussian",ker_par = c(0.02,82), num_eigen = 500)
path0 = "/home/ben/work/bspbss/real_kernel/"
saveRDS(ini,paste0(path0,"ini_gk002_82_lr",lr0,"de",decay0,".rds") )
res = mcmc_bspbss(degree_weighted,ini$init,ini$prior,ini$kernel,ep=0.5,lr = lr0,decay=decay0,subsample_n = 0.05, subsample_p = 0.005,MClength,burn_in,thin=10,show_step)
saveRDS(res,paste0(path0,"res_gk002_82_5k_lr",lr0,"de",decay0,".rds") )
res_sum = sum_mcmc_bspbss(res, degree_weighted, ini$kernel, start = 1, end = 500, select_p = 0.95)
saveRDS(res_sum,paste0(path0,"res_sum_gk002_82_5k_lr",lr0,"de",decay0,".rds") )
}
}
res_sum_list=list()
tag = 1
for(lr0 in c(0.002,0.004,0.006,0.008,0.01)){
for(decay0 in c(0.002,0.004,0.006,0.008,0.01)){
res_sum_list[[tag]] = readRDS(paste0(path0,"res_sum_gk002_82_5k_lr",lr0,"de",decay0,".rds"))
tag = tag + 1
}
}
tag = 1
mll = rep(0,25)
for(lr0 in c(0.002,0.004,0.006,0.008,0.01)){
for(decay0 in c(0.002,0.004,0.006,0.008,0.01)){
tmp = res_sum_list[[tag]]$loglik[200:500]
print( paste(lr0, decay0, tag, effectiveSize(tmp),mean(tmp)) )
mll[tag] = mean(tmp)
tag = tag + 1
}
}
plot(res_sum_list[[1]]$loglik)
plot(res_sum_list[[25]]$loglik)
plot(res_sum_list[[24]]$loglik)
plot(res_sum_list[[23]]$loglik)
plot(res_sum_list[[2]]$loglik)
plot(res_sum_list[[3]]$loglik)
plot(res_sum_list[[4]]$loglik)
plot(res_sum_list[[5]]$loglik)
plot(res_sum_list[[6]]$loglik)
plot(res_sum_list[[7]]$loglik)
plot(res_sum_list[[8]]$loglik)
plot(res_sum_list[[10]]$loglik)
plot(res_sum_list[[1]]$loglik)
plot(res_sum_list[[5]]$loglik)
plot(res_sum_list[[4]]$loglik)
plot(res_sum_list[[6]]$loglik)
mean(res_sum_list[[6]]$loglik[200:500])
mean(res_sum_list[[6]]$loglik[200:500]) - mean(res_sum_list[[1]]$loglik[200:500])
plot(res_sum_list[[20]]$loglik)
plot(res_sum_list[[18]]$loglik)
plot(res_sum_list[[17]]$loglik)
plot(res_sum_list[[16]]$loglik)
plot(res_sum_list[[20]]$loglik)
plot(res_sum_list[[21]]$loglik)
plot(res_sum_list[[22]]$loglik)
plot(res_sum_list[[23]]$loglik)
plot(res_sum_list[[24]]$loglik)
plot(res_sum_list[[14]]$loglik)
plot(res_sum_list[[13]]$loglik)
plot(res_sum_list[[11]]$loglik)
plot(res_sum_list[[6]]$loglik)
plot(res_sum_list[[7]]$loglik)
mean(res_sum_list[[6]]$loglik[200:500]) - mean(res_sum_list[[7]]$loglik[200:500])
plot(res_sum_list[[5]]$loglik)
mean(res_sum_list[[6]]$loglik[200:500]) - mean(res_sum_list[[25]]$loglik[200:500])
plot(res_sum_list[[6]]$loglik[200:500])
library(BSPBSS)
library(ica)
library(oro.nifti)
library(neurobase)
library(coda)
library(RandomFieldsUtils)
library(PrevMap)
library(BayesGPfit)
#path0 = "/Users/ben/desktop/work2/GaussianProcess/real_kernel/"
path0 = "/home/ben/work/bspbss/real_kernel/"
## real data
#load("/Users/ben/desktop/work3/data/abide_3mm.RData")
load("/home/ben/data/abide_3mm.RData")
d0 = 0.5
mask1 = rep(0, nrow(coord))
coord0 = as.matrix(coord)
for(i in 1:nrow(coord)){
mask1[i] = aal_map[coord0[i,][1],coord0[i,][2],coord0[i,][3]]
}
rm(falff)
rm(lfcd)
rm(reho)
gc()
nii = readNIfTI('/home/ben/data/AAL_90_3mm.nii')
#path0 = "/Users/ben/desktop/work2/GaussianProcess/real_kernel/"
path0 = "/home/ben/work/bspbss/real_kernel/"
#savepath = "/Users/ben/desktop/work2/GaussianProcess/real_kernel/res/"
savepath = "/home/ben/work/bspbss/real_kernel/"
res_sum_list=list()
for(i in 1:5){
print(i)
ini = readRDS(paste0(path0,"ini_gk002_82_lr0.004de0.002_noise",i,".rds"))
res = readRDS( (paste0(path0,"res_gk002_82_20k_lr0.004de0.002_noise",i,".rds") ) )
res_sum = sum_mcmc_bspbss(res, degree_weighted, ini$kernel, start = 1, end = 2000, select_p = 0.95)
res_sum_list[[i]] = res_sum
saveRDS(res_sum,paste0(path0,"res_sum_gk002_82_20k_b0k_lr0.004de0.002_noise",i,".rds") )
}
plot(res_sum_list[[1]]$loglik)
plot(res_sum_list[[2]]$loglik)
plot(res_sum_list[[3]]$loglik)
plot(res_sum_list[[4]]$loglik)
plot(res_sum_list[[5]]$loglik)
plot(res_sum_list[[5]]$loglik[100:2000])
plot(res_sum_list[[4]]$loglik[100:2000])
rm(list=ls())
gc()
#load("/Users/ben/desktop/work3/data/abide_3mm.RData")
load("/home/ben/data/abide_3mm.RData")
d0 = 0.5
mask1 = rep(0, nrow(coord))
coord0 = as.matrix(coord)
for(i in 1:nrow(coord)){
mask1[i] = aal_map[coord0[i,][1],coord0[i,][2],coord0[i,][3]]
}
rm(falff)
rm(lfcd)
rm(reho)
gc()
MClength = 3000
burn_in = 0
show_step = 1000
for(lr0 in c(0.001,0.01,0.1)){
for(decay0 in c(0.001,0.01,0.1)){
seed0 = lr0*10000 + decay0 * 100
set.seed(seed0)
print(paste(seed0,lr0,decay0))
ini = init_bspbss(degree_weighted, mask = (mask1>0), xgrid = coord, dens = d0, q = 10, kernel="gaussian",ker_par = c(0.02,82), num_eigen = 500)
path0 = "/home/ben/work/bspbss/real_kernel/"
saveRDS(ini,paste0(path0,"ini_gk002_82_lr",lr0,"de",decay0,".rds") )
res = mcmc_bspbss(degree_weighted,ini$init,ini$prior,ini$kernel,ep=0.5,lr = lr0,decay=decay0,subsample_n = 0.05, subsample_p = 0.005,MClength,burn_in,thin=10,show_step)
saveRDS(res,paste0(path0,"res_gk002_82_3k_lr",lr0,"de",decay0,".rds") )
res_sum = sum_mcmc_bspbss(res, degree_weighted, ini$kernel, start = 1, end = 300, select_p = 0.95)
saveRDS(res_sum,paste0(path0,"res_sum_gk002_82_3k_lr",lr0,"de",decay0,".rds") )
}
}
res_sum_list=list()
tag = 1
for(lr0 in c(0.001,0.01,0.1)){
for(decay0 in c(0.001,0.01,0.1)){
res_sum_list[[tag]] = readRDS(paste0(path0,"res_sum_gk002_82_3k_lr",lr0,"de",decay0,".rds"))
tag = tag + 1
}
}
tag = 1
mll = rep(0,9)
for(lr0 in c(0.001,0.01,0.1)){
for(decay0 in c(0.001,0.01,0.1)){
tmp = res_sum_list[[tag]]$loglik[200:500]
print( paste(lr0, decay0, tag, effectiveSize(tmp),mean(tmp)) )
mll[tag] = mean(tmp)
tag = tag + 1
}
}
tag = 1
mll = rep(0,9)
for(lr0 in c(0.001,0.01,0.1)){
for(decay0 in c(0.001,0.01,0.1)){
tmp = res_sum_list[[tag]]$loglik
print( paste(lr0, decay0, tag, effectiveSize(tmp),mean(tmp)) )
mll[tag] = mean(tmp)
tag = tag + 1
}
}
plot(res_sum_list[[tag]]$loglik)
plot(res_sum_list[[1]]$loglik)
plot(res_sum_list[[2]]$loglik)
plot(res_sum_list[[3]]$loglik)
plot(res_sum_list[[4]]$loglik)
plot(res_sum_list[[5]]$loglik)
plot(res_sum_list[[6]]$loglik)
plot(res_sum_list[[7]]$loglik)
plot(res_sum_list[[8]]$loglik)
plot(res_sum_list[[9]]$loglik)
plot(res_sum_list[[7]]$loglik)
plot(res_sum_list[[7]]$loglik[100:300])
plot(res_sum_list[[8]]$loglik[100:300])
plot(res_sum_list[[1]]$loglik[100:300])
plot(res_sum_list[[2]]$loglik[100:300])
lr0 = 0.004
decay0 = 0.002
res_sum = readRDS(paste0(path0,"res_sum_gk002_82_40k_b10k_lr",lr0,"de",decay0,".rds"))
decay0
res_sum = readRDS( paste0(path0,"res_sum_gk002_82_40k_b10k_lr",lr0,"de",decay0,".rds") )
rm(list=ls())
gc()
res_sum = readRDS( paste0(path0,"res_sum_gk002_82_40k_b10k_lr",lr0,"de",decay0,".rds") )
path0 = "/home/ben/work/bspbss/real_kernel/"
lr0 = 0.004
decay0 = 0.002
res_sum = readRDS( paste0(path0,"res_sum_gk002_82_40k_b10k_lr",lr0,"de",decay0,".rds") )
res_sum = readRDS( paste0(path0,"res_gk002_82_40k_b10k_lr",lr0,"de",decay0,".rds") )
res_sum = readRDS( paste0(path0,"res_gk002_82_40k_lr",lr0,"de",decay0,".rds") )
res_sum
paste0(path0,"res_gk002_82_40k_lr",lr0,"de",decay0,".rds")
res_sum = readRDS( paste0(path0,"res_gk002_82_40k_lr",lr0,"de",decay0,".rds") )
res_sum0 = readRDS( paste0(path0,"res_gk002_82_40k_lr",lr0,"de",decay0,".rds") )
res_sum0
res_sum0 = readRDS( paste0(path0,"res_gk002_82_40k_lr",lr0,"de",decay0,".rds") )
paste0(path0,"res_sum_gk002_82_40k_b10k_lr",lr0,"de",decay0,".rds")
